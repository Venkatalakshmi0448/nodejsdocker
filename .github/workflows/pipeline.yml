name: Validate and Push Docker Image (Reusable)

on:
  push:
    branches:
      - main
  workflow_dispatch:  # Allows manual trigger
  workflow_call:
    inputs:
      branches:
        description: "Branches to validate"
        required: false
        type: string
        default: '["main"]'
      dockerfiles:
        description: "Paths to Dockerfiles"
        required: false
        type: string
        default: '["Dockerfile"]'
      dockerhub_repo:
        description: "DockerHub repository name"
        required: true
        type: string
      docker_tags:
        description: "Docker image tags"
        required: false
        type: string
        default: '["latest"]'
      deploy_envs:
        description: "Deployment environments"
        required: false
        type: string
        default: '["staging"]'
    secrets:
      DOCKERHUB_USERNAME:
        required: true
      DOCKERHUB_PASSWORD:
        required: true

jobs:
  validate-and-push:
    runs-on: ubuntu-latest
    environment: ${{ matrix.deploy_env }}

    strategy:
      matrix:
        branch: ${{ fromJson(inputs.branches) }}
        dockerfile: ${{ fromJson(inputs.dockerfiles) }}
        docker_tag: ${{ fromJson(inputs.docker_tags) }}
        deploy_env: ${{ fromJson(inputs.deploy_envs) }}
      fail-fast: false

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          ref: ${{ matrix.branch }}
          fetch-depth: 0
          submodules: true

      - name: Validate Inputs
        run: |
          echo "Branch: ${{ matrix.branch }}"
          echo "Dockerfile: ${{ matrix.dockerfile }}"
          echo "Docker Tag: ${{ matrix.docker_tag }}"
          echo "Deployment Environment: ${{ matrix.deploy_env }}"

      - name: Validate Secrets
        run: |
          if [[ -z "${{ secrets.DOCKERHUB_USERNAME }}" || -z "${{ secrets.DOCKERHUB_PASSWORD }}" ]]; then
            echo "❌ Required secrets are missing!"
            exit 1
          fi
          echo "✅ Secrets validation passed."

      - name: Log in to DockerHub
        uses: docker/l
